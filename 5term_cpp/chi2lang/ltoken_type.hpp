
/// ATTENTION!
/// This file has been automatically generated by the script gen_node.py.
/// There is no point editing it, try changing gen_node.py.
    

#pragma once

#include <map>

const int MIN_PRIOR = -5;
const int MAX_PRIOR = 10;



enum struct TokenType {
    CONST,
	NAME,
	PLUS,
	MINUS,
	MULT,
	DIV,
	MOD,
	LAND,
	LOR,
	XOR,
	LESS,
	EQ,
	ASSIGN,
	IF,
	IF_LEFT,
	IF_RIGHT,
	WHILE,
	WHILE_LEFT,
	WHILE_RIGHT,
	DEF,
	DECLVAR,
	ENDINSTR,
	PRINT,
	NOP,
    ELSE,
	OPEN_PAR,
	CLOSE_PAR,
	OPEN_BRACE,
	CLOSE_BRACE
};

std::map<std::string, TokenType> token_types;
std::map<TokenType, int> associativity;
std::map<TokenType, int> priority;

void InitTokenMap() {
    
    token_types["+"] = TokenType::PLUS;
    token_types["-"] = TokenType::MINUS;
    token_types["*"] = TokenType::MULT;
    token_types["/"] = TokenType::DIV;
    token_types["%"] = TokenType::MOD;
    token_types["&"] = TokenType::LAND;
    token_types["|"] = TokenType::LOR;
    token_types["^"] = TokenType::XOR;
    token_types["<"] = TokenType::LESS;
    token_types["="] = TokenType::EQ;
    token_types[":="] = TokenType::ASSIGN;
    token_types["if"] = TokenType::IF;
    token_types["while"] = TokenType::WHILE;
    token_types["def"] = TokenType::DEF;
    token_types["var"] = TokenType::DECLVAR;
    token_types[";"] = TokenType::ENDINSTR;
    token_types["print"] = TokenType::PRINT;
    token_types["nop"] = TokenType::NOP;
    
    token_types["else"] = TokenType::ELSE;
    token_types["("] = TokenType::OPEN_PAR;
    token_types[")"] = TokenType::CLOSE_PAR;
    token_types["{"] = TokenType::OPEN_BRACE;
    token_types["}"] = TokenType::CLOSE_BRACE;
    
    associativity[TokenType::CONST] = 0;
    associativity[TokenType::NAME] = 0;
    associativity[TokenType::PLUS] = 0;
    associativity[TokenType::MINUS] = 0;
    associativity[TokenType::MULT] = 0;
    associativity[TokenType::DIV] = 0;
    associativity[TokenType::MOD] = 0;
    associativity[TokenType::LAND] = 0;
    associativity[TokenType::LOR] = 0;
    associativity[TokenType::XOR] = 0;
    associativity[TokenType::LESS] = 0;
    associativity[TokenType::EQ] = 0;
    associativity[TokenType::ASSIGN] = 1;
    associativity[TokenType::IF] = 0;
    associativity[TokenType::IF_LEFT] = 0;
    associativity[TokenType::IF_RIGHT] = 0;
    associativity[TokenType::WHILE] = 0;
    associativity[TokenType::WHILE_LEFT] = 0;
    associativity[TokenType::WHILE_RIGHT] = 0;
    associativity[TokenType::DEF] = 0;
    associativity[TokenType::DECLVAR] = 0;
    associativity[TokenType::ENDINSTR] = 0;
    associativity[TokenType::PRINT] = 0;
    associativity[TokenType::NOP] = 0;
    
    priority[TokenType::CONST] = MAX_PRIOR;
    priority[TokenType::NAME] = MAX_PRIOR;
    priority[TokenType::PLUS] = 6;
    priority[TokenType::MINUS] = 6;
    priority[TokenType::MULT] = 8;
    priority[TokenType::DIV] = 8;
    priority[TokenType::MOD] = 7;
    priority[TokenType::LAND] = 3;
    priority[TokenType::LOR] = 1;
    priority[TokenType::XOR] = 2;
    priority[TokenType::LESS] = 5;
    priority[TokenType::EQ] = 4;
    priority[TokenType::ASSIGN] = 0;
    priority[TokenType::PRINT] = -1;
}

    
